{"version":3,"sources":["components/TodoItem.js","components/Todo.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","backgroundColor","padding","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","color","border","borderRadius","float","Proptype","object","isRequired","func","Todo","todos","map","index","components_TodoItem","array","headerStyle","background","textAlign","linkStyle","Header","react_router_dom","to","AddTodo","state","changeInput","event","setState","target","submit","preventDefault","addTodo","onSubmit","display","name","flex","placeholder","className","PropType","About","Fragment","App","axios","delete","then","res","filter","post","toConsumableArray","data","console","log","_this2","get","_this3","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todo","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39db8c1c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Proptype from 'prop-types';\r\nexport class TodoItem extends Component {\r\n    getStyle = () =>{\r\n        return {\r\n            backgroundColor: 'grey',\r\n            padding : '10px',\r\n            borderBottom:'1px #ccc dotted',\r\n            textDecoration : this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    render() {\r\n        const {id,title} = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n            <input type=\"checkbox\" onChange={this.props.markComplete.bind(this,id)}/>{' '}\r\n            {title}\r\n            <button type=\"button\" style={btnStyle} onClick={this.props.delTodo.bind(this,id)}>X</button>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst btnStyle ={\r\n    backgroundColor: 'black',\r\n    color:'white',\r\n    border:'none',\r\n    borderRadius:'50%',\r\n    float:'right'\r\n}\r\n\r\n\r\nconst itemStyle ={\r\n    backgroundColor: 'grey'\r\n}\r\n\r\nTodoItem.Proptype = {\r\n    todo : Proptype.object.isRequired,\r\n    markComplete : Proptype.func.isRequired,\r\n    delTodo : Proptype.func.isRequired\r\n}\r\n\r\nexport default TodoItem\r\n","import React ,{Component}from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport Proptype from 'prop-types';\r\nclass Todo extends Component {\r\n    \r\n    render(){\r\n        return (\r\n            this.props.todos.map((todo,index)=> (\r\n            <TodoItem \r\n            key={index} \r\n            todo={todo} \r\n            markComplete={this.props.markComplete}\r\n            delTodo={this.props.delTodo}/>\r\n        ))\r\n        );\r\n    }\r\n}\r\n\r\nTodo.Proptype = {\r\n    todos : Proptype.array.isRequired,\r\n    markComplete : Proptype.func.isRequired,\r\n    delTodo : Proptype.func.isRequired\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>TodoList</h1>\r\n      <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst headerStyle ={\r\n    background :'#333',\r\n    color : '#fff',\r\n    textAlign :'center',\r\n    padding : '10px'\r\n}\r\n\r\nconst linkStyle ={\r\n  color : '#fff',\r\n  textDecoration:'none'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport Proptype from 'prop-types';\r\nexport class AddTodo extends Component {\r\n    state ={\r\n        title : ''\r\n    }\r\n    changeInput =(event) =>{\r\n        \r\n        this.setState({title : event.target.value})\r\n    }\r\n    submit = (event)=>{\r\n        event.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title:''})\r\n    }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit} style={{display: 'flex'}}>\r\n        <input \r\n            type=\"text\"\r\n            name=\"title\"\r\n            style={{flex:'10',padding:'5px'}}\r\n            placeholder=\"Add Todo ...\"\r\n            value={this.state.title}\r\n            onChange={this.changeInput}\r\n            />\r\n            <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            className=\"btn\"\r\n            style={{flex:'1'}}\r\n            />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nAddTodo.PropType = {\r\n  addTodo : Proptype.object.isRequired,\r\n  markComplete : Proptype.func.isRequired,\r\n  delTodo : Proptype.func.isRequired\r\n}\r\n\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is part of react crash course</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default About;","import React ,{Component}from 'react';\nimport Todo from './components/Todo';\nimport Header from './components/layout/Header'\nimport AddTodo from './components/AddTodo'\nimport About from './components/pages/About'\nimport uuid from 'uuid'\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport './App.css'\nimport axios from 'axios'\n\nclass App extends Component {\n  state ={\n    todos : [\n    ]\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => this.setState({todos : res.data}))\n  }\n\n  markComplete =(id)=>{\n    this.setState({todos: this.state.todos.map(todo=>{\n     if(todo.id === id)\n      {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })});\n  } \n\n  delTodo =(id)=>{\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({todos: this.state.todos.filter(todo=>todo.id !== id)}))\n    \n  } \n\n  addTodo=(title)=>{\n    axios.post('https://jsonplaceholder.typicode.com/todos',\n    {\n      title,\n      completed:false\n    })\n    .then(res=> this.setState({todos:[...this.state.todos,res.data]}));\n    \n    console.log(title)\n  }\n\n  render(){\n    console.log(this.state.todos);\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props =>(\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo}/>\n                <Todo todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About}/>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}